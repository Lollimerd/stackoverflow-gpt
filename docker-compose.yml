
services:
  neo4j:
    container_name: movieDB
    image: neo4j:latest # Using 'latest' for the most recent Community Edition.

    ports:
      - "7474:7474" # Neo4j Browser / HTTP API
      - "7687:7687" # Bolt protocol for drivers
    environment:
      # --- Neo4j Authentication (REQUIRED) ---
      # It's recommended to use a .env file for sensitive info like passwords.
      - NEO4J_AUTH=neo4j/password

      # --- Plugins Configuration ---
      # This is the key part to enable both GDS and APOC
      # 'apoc' is for APOC Core. For APOC Extended, you might use 'apoc-extended'
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]

      # --- Security Configuration for Procedures (CRITICAL for plugins to work) ---
      # Allow all procedures from APOC and GDS.
      # You can make this more granular if needed (e.g., apoc.coll.*, gds.alpha.*)
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      # Ensure procedures are explicitly allowed if you have a strict allowlist
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*

      # --- APOC specific configurations (Optional, but often useful) ---
      # Enable APOC's file import/export features (for CSV, JSON etc.)
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true

      # --- Memory Configuration (Recommended for GDS) ---
      # Adjust these values based on your host's available RAM and graph size.
      # GDS often requires more memory for graph projections.
      - NEO4J_server_memory_heap_initial__size=1G # Minimum initial heap size
      - NEO4J_server_memory_heap_max__size=4G   # Maximum heap size
      - NEO4J_server_memory_pagecache_size=2G # For large graphs, dedicate memory to page cache
    networks:
      - app-network

  graphDB:
    container_name: stackoverflowDB
    image: neo4j:latest # Using 'latest' for the most recent Community Edition.
    ports:
      - "7473:7474" # Neo4j Browser / HTTP API
      - "7686:7687" # Bolt protocol for drivers
    environment:
      # --- Neo4j Authentication (REQUIRED) ---
      # It's recommended to use a .env file for sensitive info like passwords.
      - NEO4J_AUTH=${NEO4J_USERNAME-neo4j}/${NEO4J_PASSWORD-password}

      # --- Plugins Configuration ---
      # This is the key part to enable both GDS and APOC
      # 'apoc' is for APOC Core. For APOC Extended, you might use 'apoc-extended'
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]

      # --- Security Configuration for Procedures (CRITICAL for plugins to work) ---
      # Allow all procedures from APOC and GDS.
      # You can make this more granular if needed (e.g., apoc.coll.*, gds.alpha.*)
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      # Ensure procedures are explicitly allowed if you have a strict allowlist
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*

      # --- APOC specific configurations (Optional, but often useful) ---
      # Enable APOC's file import/export features (for CSV, JSON etc.)
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true

      # --- Memory Configuration (Recommended for GDS) ---
      # Adjust these values based on your host's available RAM and graph size.
      # GDS often requires more memory for graph projections.
      - NEO4J_server_memory_heap_initial__size=1G # Minimum initial heap size
      - NEO4J_server_memory_heap_max__size=4G   # Maximum heap size
      - NEO4J_server_memory_pagecache_size=2G # For large graphs, dedicate memory to page cache
    networks:
      - app-network

  ollama:
    image: ollama/ollama
    container_name: localLLMs
    ports:
      - "11434:11434"
    gpus: all
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: netflix_backend
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=neo4j://neo4j:7687 
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - OLLAMA_BASE_URL=http://localhost:11433
    depends_on:
      - neo4j
      - ollama
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: streamlit_frontend
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - app-network

  loader:
    build:
      context: .
      dockerfile: loader.Dockerfile
    environment:
        - NEO4J_URI=${NEO4J_URL-neo4j://database:7686}
        - NEO4J_PASSWORD=${NEO4J_PASS-password}
        - NEO4J_USERNAME=${NEO4J_USER-neo4j}
        - OPENAI_API_KEY=${OPENAI_API_KEY-}
        - GOOGLE_API_KEY=${GOOGLE_API_KEY-}
        - OLLAMA_BASE_URL=${OLLAMA_BASE_URL-http://localhost:11433}
    ports:
      - 8502:8502


networks:
  app-network:
    driver: bridge